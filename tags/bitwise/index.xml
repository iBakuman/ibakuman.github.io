<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Bitwise on iBakuman&#39;s Blog</title>
        <link>https://ibakuman.github.io/tags/bitwise/</link>
        <description>Recent content in Bitwise on iBakuman&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 01 Jul 2023 21:29:11 +0800</lastBuildDate><atom:link href="https://ibakuman.github.io/tags/bitwise/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>剑指 Offer 65. 不用加减乘除做加法</title>
        <link>https://ibakuman.github.io/posts/leetcode/offer/65-bu-yong-jia-jian-cheng-chu-zuo-jia-fa-lcof/</link>
        <pubDate>Sat, 01 Jul 2023 21:29:11 +0800</pubDate>
        
        <guid>https://ibakuman.github.io/posts/leetcode/offer/65-bu-yong-jia-jian-cheng-chu-zuo-jia-fa-lcof/</guid>
        <description>&lt;h2 id=&#34;题目描述&#34;&gt;题目描述&lt;/h2&gt;
&lt;p&gt;写一个函数，求两个整数之和，要求在函数体内不得使用 “+”、“-”、“*”、“/” 四则运算符号。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入: a = 1, b = 1&lt;/li&gt;
&lt;li&gt;输出: 2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;提示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; 均可能是负数或 0&lt;/li&gt;
&lt;li&gt;结果不会溢出 32 位整数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;解法一位运算&#34;&gt;解法一：位运算&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;carry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;^&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;carry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>位运算</title>
        <link>https://ibakuman.github.io/posts/algorithm/bitwise-operation/</link>
        <pubDate>Fri, 16 Jun 2023 12:01:47 +0800</pubDate>
        
        <guid>https://ibakuman.github.io/posts/algorithm/bitwise-operation/</guid>
        <description>&lt;p&gt;结论 1：一个数对 2 的非负整数次幂取模，等价于取二进制下一个数的后若干位这个结论是正确的。下面给出证明：&lt;/p&gt;
&lt;p&gt;首先，我们证明取模 $2^n$ 等价于取二进制下一个数的后 $n$ 位：&lt;/p&gt;
&lt;p&gt;任意一个非负整数 $x$ 可以表示为 $x = a2^n + b$ 的形式，其中 $a$ 和 $b$ 都是非负整数，且 $b &amp;lt; 2^n$。因此，$x$ 对 $2^n$ 取模的结果就是 $x$ 减去 $a2^n$ 后剩余的部分，即 $x \mod 2^n = b$。又因为 $b$ 的二进制表示中的最高 $n$ 位都是 $0$，所以 $b$ 和 $2^n$ 的二进制表示在这些位上都是相同的。因此，$x$ 对 $2^n$ 取模等价于取 $x$ 的二进制表示的后 $n$ 位。&lt;/p&gt;
&lt;p&gt;接下来，我们证明取一个数的模 $2^n$ 再减 $1$ 等价于取该数的二进制表示的后 $n$ 位并将其全部设为 $1$：&lt;/p&gt;
&lt;p&gt;任意一个非负整数 $x$ 可以表示为 $x = a2^n + b$ 的形式，其中 $a$ 和 $b$ 都是非负整数，且 $b &amp;lt; 2^n$。因此，$x$ 对 $2^n$ 取模的结果就是 $x$ 减去 $a2^n$ 后剩余的部分，即 $x \mod 2^n = b$。因此，$x$ 对 $2^n$ 取模再减 $1$ 的结果就是 $b - 1$。又因为 $b$ 的二进制表示中的最高 $n$ 位都是 $0$，所以 $b$ 对应的二进制数的后 $n$ 位都是 $b$ 的二进制表示的后 $n$ 位。因此，$b - 1$ 对应的二进制数就是将 $b$ 的二进制表示的后 $n$ 位全部设为 $1$ 后得到的数。&lt;/p&gt;
&lt;p&gt;最后，我们证明取模 $2^n$ 等价于和 $2^n - 1$ 进行与操作：&lt;/p&gt;
&lt;p&gt;由于 $2^n - 1$ 的二进制表示中的所有位都是 $1$，因此，将一个数 $x$ 和 $2^n - 1$ 进行与操作就相当于将 $x$ 的二进制表示的后 $n$ 位全部设为 $0$，即去掉 $x$ 的二进制表示的后 $n$ 位。因此，$x$ 对 $2^n$ 取模等价于将 $x$ 和 $2^n - 1$ 进行与操作后得到的数，即取 $x$ 的二进制表示的后 $n$ 位并将其全部设为 $0$。而根据前面的证明，这也等价于取 $x$ 的模 $2^n$ 的结果再减 $1$ 后的二进制表示的后 $n$ 位全部设为 $0$。因此，取模 $2^n$ 等价于和 $2^n - 1$ 进行与操作。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
