<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Binary Tree on iBakuman&#39;s Blog</title>
        <link>https://ibakuman.github.io/tags/binary-tree/</link>
        <description>Recent content in Binary Tree on iBakuman&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Tue, 02 May 2023 12:18:21 +0800</lastBuildDate><atom:link href="https://ibakuman.github.io/tags/binary-tree/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>有关树的 LeetCode 题目</title>
        <link>https://ibakuman.github.io/posts/leetcode/tree/</link>
        <pubDate>Tue, 02 May 2023 12:18:21 +0800</pubDate>
        
        <guid>https://ibakuman.github.io/posts/leetcode/tree/</guid>
        <description>&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0098-validate-binary-search-tree/&#34; &gt;98. 验证二叉搜索树&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0101-symmetric-tree/&#34; &gt;101. 对称二叉树&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0104-maximum-depth-of-binary-tree/&#34; &gt;104. 二叉树的最大深度&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0108-convert-sorted-array-to-binary-search-tree/&#34; &gt;108. 将有序数组转换为二叉搜索树&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0110-balanced-binary-tree/&#34; &gt;110. 平衡二叉树&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0111-minimum-depth-of-binary-tree/&#34; &gt;111. 二叉树的最小深度&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0112-path-sum/&#34; &gt;112. 路径总和&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0226-invert-binary-tree/&#34; &gt;226. 翻转二叉树&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0236-lowest-common-ancestor-of-a-binary-tree/&#34; &gt;236. 二叉树的最近公共祖先&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0257-binary-tree-paths/&#34; &gt;257. 二叉树的所有路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0404-sum-of-left-leaves/&#34; &gt;404. 左叶子之和&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0450-delete-node-in-a-bst/&#34; &gt;450. 删除二叉搜索树中的节点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0501-find-mode-in-binary-search-tree/&#34; &gt;501. 二叉搜索树中的众数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0513-find-bottom-left-tree-value/&#34; &gt;513. 找树左下角的值&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0530-minimum-absolute-difference-in-bst/&#34; &gt;530. 二叉搜索树的最小绝对差&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0538-convert-bst-to-greater-tree/&#34; &gt;538. 把二叉搜索树转换为累加树&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0559-maximum-depth-of-n-ary-tree/&#34; &gt;559. N 叉树的最大深度&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0617-merge-two-binary-trees/&#34; &gt;617. 合并二叉树&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0669-trim-a-binary-search-tree/&#34; &gt;669. 修剪二叉搜索树&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;../problems/0700-search-in-a-binary-search-tree/&#34; &gt;700. 二叉搜索树中的搜索&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
